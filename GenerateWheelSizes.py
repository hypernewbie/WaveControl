import os, sys, csv

# ref : https://www.bikecalc.com/wheel_size_math

fp = open( "WaveControlWheelSizeList.h", mode="w", encoding="utf-8" )
fp.write(
"""
// DO NOT EDIT!!! Generated by GenerateWheelSizes.py from WheelSizes.csv!!!!
#pragma once

#include <vector>
#include <string>

struct WaveControl_WheelSizeData
{
    std::string FriendlyName = "Unknown";
    
    float RimDiameterMM = 0.0f;
    float TireWidthMM = 0.0f;
    float WheelDiameterMM = 0.0f;

    float WheelCircumferenceMM = 0.0f;
};

#ifdef WAVECONTROL_WHEELSIZE_DATA_IMPLEMENTATION
inline WaveControl_WheelSizeData WaveControl_Make_WheelSizeData( std::string FriendlyName, float RimDiameterMM, float TireWidthMM, float WheelDiameterMM, float WheelCircumferenceMM )
{
    WaveControl_WheelSizeData Data;
    Data.FriendlyName = FriendlyName;
    Data.RimDiameterMM = RimDiameterMM;
    Data.TireWidthMM = TireWidthMM;
    Data.WheelDiameterMM = WheelDiameterMM;
    Data.WheelCircumferenceMM = WheelCircumferenceMM;
    return Data;
}

inline void WaveControl_InitialiseWheelSizes( std::vector<WaveControl_WheelSizeData>& DataArray )
{
"""
);

with open( 'WheelSizes.csv', mode="r", encoding="utf-8" ) as csvfile:
    csvreader = csv.reader( csvfile )
    for row in csvreader:
        fp.write( "    DataArray.push_back( WaveControl_Make_WheelSizeData( \"%s\", %s, %s, %s, %s ) );\n" % ( row[0], row[1], row[2], row[3], row[4]) )

fp.write("\n}\n");
fp.write("#endif // WAVECONTROL_WHEELSIZE_DATA_IMPLEMENTATION\n");

